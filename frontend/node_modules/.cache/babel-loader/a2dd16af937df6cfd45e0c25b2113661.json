{"remainingRequest":"/Users/gunn/Documents/ODE TO CODE/NameParade2020/frontend/node_modules/babel-loader/lib/index.js!/Users/gunn/Documents/ODE TO CODE/NameParade2020/frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/gunn/Documents/ODE TO CODE/NameParade2020/frontend/src/store.js","dependencies":[{"path":"/Users/gunn/Documents/ODE TO CODE/NameParade2020/frontend/src/store.js","mtime":1600420970847},{"path":"/Users/gunn/Documents/ODE TO CODE/NameParade2020/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gunn/Documents/ODE TO CODE/NameParade2020/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/gunn/Documents/ODE TO CODE/NameParade2020/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/gunn/Documents/ODE TO CODE/NameParade2020/frontend/src/store.js"],"names":["Vue","Vuex","axios","randomstring","colorHarmonies","getRandomInt","min","max","Math","ceil","floor","random","userId","generate","length","charset","test","client","modal","foo","use","Store","state","winSize","vw","vh","viewtype","loadedArr","loading","processing","loadSpeed","fakeOffset","faker","filesInServer","colorScheme","writer","scale","paths","info","name","ip","uag","inTime","writeTime","outTime","SIGNS","getters","MODAL","FILES_IN_SERVER","FILES_LOADED","LOADING_PROGRESS","result","BBC","VIEWTYPE","byType","_small","_narrow","_tablet","_wide","mutations","PUT_INITDATA","recieved","console","log","get","data","jsonCount","START_SIGNLOAD","setTimeout","pushToSIGNS","count","push","offsetLoadFaker","i","UPDATE_SIGNS","amount","post","SEND_PATHS","Date","now","status","setBBC","comp","hue","harmonies","stdColor","CHECK_FILES","LOAD_FILES","SEND_PATH","actions","INITIATE","commit"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport randomstring from 'randomstring';\n\n// const resourceHost = 'http://localhost:3000'\n\nconst colorHarmonies = [\n  [-30, 30, -40, +40, 0],\n  [-35, 35, -45, +45, 0],\n  [-30, 30, -40, +40, 180],\n  [0, 0, 180, 180, 180],\n  [-20, +20, +180, +180, 0]\n]\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; \n} //최댓값은 제외, 최솟값은 포함\n\nlet userId = randomstring.generate({\n  length: 10,\n  charset: 'alphanumeric'\n});\n\nconst test = {\n  client: {\n    // loading: true,\n    // MODAL: true,\n      modal:0,\n    \n\n  },\n  foo: 'bar',\n  modal: true,\n}\n\nVue.use(Vuex)\nexport default new Vuex.Store({\n  state: { //================================\n    test: test,\n    \n    winSize: {\n      vw: null,\n      vh: null,\n    },\n    viewtype: null,\n    modal: 0,\n      // 0:loading, 1:writer, 2:parade, 3:story\n\n    loadedArr: [],\n    loading: {\n      processing: 0, // 1:loading, 2:done\n      loadSpeed: 30, // (ms)\n        fakeOffset: 0,\n        faker: 200 + 200,\n      filesInServer: 0\n    },\n\n    colorScheme: [],\n\n    writer:{\n      scale: 0,\n      paths:[],\n      info: {\n        userId: userId,\n        name: userId,\n        ip: null,\n        uag: null,\n        inTime: null,\n        writeTime: null,\n        outTime: null\n      }\n    },\n    SIGNS: [],\n\n\n  },\n  getters: { //==============================\n\n    MODAL(state){\n      if(state.test.client.MODAL){\n        return state.test.client.modal\n      }else{\n        return state.modal\n      }\n    },\n\n    FILES_IN_SERVER(state){\n      return state.loading.filesInServer\n    },\n    FILES_LOADED(state){\n      return state.SIGNS.length\n    },\n    LOADING_PROGRESS(state){\n      let result;\n      if(state.loading.processing < 2){\n        result = (state.SIGNS.length + state.loading.fakeOffset) / (state.loading.filesInServer + state.loading.faker);\n          if(state.test.client.loading){ result = (100)/100 }\n      }else{\n        result = (100)/100\n      }return result\n    },\n\n\n    BBC(state){\n      return state.colorScheme\n    },\n\n    VIEWTYPE(state){\n      if(state.winSize.vw < 550){\n        if(state.winSize.vw/state.winSize.vh > 0.58){\n          state.viewtype = 'small';\n          return 'small'\n        }else{\n          state.viewtype = 'narrow';\n          return 'narrow'\n        }\n      }else{\n        if(state.winSize.vw/state.winSize.vh > 1){\n          state.viewtype = 'wide';\n          return 'wide'\n        }else{\n          state.viewtype = 'tablet';\n          return 'tablet'\n        }\n      }\n    },\n    byType(state){\n      return {\n        _small: (state.viewtype === 'small'),\n        _narrow: (state.viewtype === 'narrow'),\n        _tablet: (state.viewtype === 'tablet'),\n        _wide: (state.viewtype === 'wide'),\n      }\n    },\n    \n\n\n\n\n\n\n  },\n  mutations: { //============================\n\n    //__________________________ INITIATING METHODS\n    async PUT_INITDATA(state, recieved){\n      console.log('$$$ request ...$mutation/PUT_INITDATA');\n      state.loading.fakeOffset += 30;\n      state.writer.info.ip = recieved.ip;\n      state.writer.info.uag = recieved.uag;\n      console.log(state.writer.info);\n      const {data} = await axios.get('/load/file-count');\n      state.loading.filesInServer = data.jsonCount; // -- trigger FILES_IN_SERVER\n    },\n\n    //__________________________ SIGN DATA METHODS\n    async START_SIGNLOAD(state){\n      console.log('if initial loading ...m:START_SIGNLOAD');\n      state.loading.fakeOffset += 40;\n      const {data} = await axios.get('/load/initial');\n      state.loadedArr = data;\n      setTimeout(this.pushToSIGNS, state.loading.loadSpeed);\n    },\n    \n    pushToSIGNS(state){\n      if(state.loading.processing < 2){\n        const count = state.SIGNS.length;\n        state.SIGNS.push(state.loadedArr[count]);\n        if(state.SIGNS.length === state.loading.filesInServer){\n          state.loadedArr = [];\n          this.offsetLoadFaker();\n        }else{\n          setTimeout(this.pushToSIGNS, state.loading.loadSpeed);\n        }\n      }else{\n        for(var i=0; i<state.loadedArr.length; i++){\n          state.SIGNS.push(state.loadedArr[i]);\n        }\n        state.loadedArr = [];\n      }\n    },\n    \n    offsetLoadFaker(state){\n      if(state.loading.fakeOffset < state.loading.faker){\n        state.loading.fakeOffset += 1;\n        setTimeout(this.offsetLoadFaker, state.loading.loadSpeed);\n      }\n      else{\n        state.loading.processing = 2;\n        state.modal = 1;\n      }\n    },\n    \n    async UPDATE_SIGNS(state, amount){\n      const {data} = await axios.post('/load/update', {amount});\n      state.loadedArr = data;\n      this.pushToSIGNS();\n    },\n\n    async SEND_PATHS(state){\n      if(state.writer.paths.length){\n        state.writer.info.writeTime = Date.now();\n        const {data} = await axios.post('/push/paths', {writer: state.writer});\n        if(data.status === 200){\n          state.modal = 2;\n        }\n      }else{\n        console.log('draw signs first!');\n      }\n    },\n\n\n\n    //__________________________ UI METHODS\n    setBBC(state, {comp, hue}){\n      let harmonies, stdColor;\n      if(comp<0){\n        harmonies = colorHarmonies[getRandomInt(0, colorHarmonies.length)];\n      }else{\n        harmonies = colorHarmonies[comp]\n      }\n      if(hue<0){\n        stdColor = getRandomInt(0, 361);\n      }else{\n        stdColor = hue\n      }\n      state.colorScheme = [\n        stdColor,\n        stdColor + harmonies[0],\n        stdColor + harmonies[1],\n        stdColor + harmonies[2],\n        stdColor + harmonies[3],\n        stdColor + harmonies[4]\n      ]\n    },\n\n\n\n\n    \n\n    CHECK_FILES(){\n\n    },\n\n    LOAD_FILES(){\n\n    },\n  \n    SEND_PATH(){\n\n    }\n\n\n\n\n    \n    \n\n  },\n  actions: { //==============================\n    async INITIATE({commit, state}){\n      console.log(\"==== INITIATING REQUEST ====\");\n      const {data} = await axios.post('/init/enter', {userId});\n      state.writer.info.inTime = Date.now();\n      commit('PUT_INITDATA', {ip: data.ip, uag: data.uag});\n    },\n\n\n\n    \n  }\n})"]}]}